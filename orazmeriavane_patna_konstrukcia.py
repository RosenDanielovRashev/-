# –ó–∞–º–µ–Ω–µ—Ç–µ —Ä–∞–∑–¥–µ–ª–∞ –∑–∞ PDF –æ—Ç—á–µ—Ç —Å—ä—Å —Å–ª–µ–¥–Ω–∏—è –∫–æ–¥:

st.markdown("---")
st.subheader("–ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç")

# –ò–∑–±–æ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ –∑–∞ –≤–∫–ª—é—á–≤–∞–Ω–µ –≤ PDF
st.markdown("**–ò–∑–±–µ—Ä–µ—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ –∑–∞ –≤–∫–ª—é—á–≤–∞–Ω–µ –≤ –æ—Ç—á–µ—Ç–∞:**")
col1, col2, col3 = st.columns(3)

with col1:
    include_main = st.checkbox("–û—Å–Ω–æ–≤–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞", value=True)
    include_fig94 = st.checkbox("ÍöåŒº/p (—Ñ–∏–≥9.4)", value=True)

with col2:
    include_fig96 = st.checkbox("ÍöåŒº/p (—Ñ–∏–≥9.6)", value=True)
    include_fig97 = st.checkbox("ÍöåŒº/p (—Ñ–∏–≥9.7)", value=True)

with col3:
    include_tension = st.checkbox("–û–ø—ä–Ω –≤ –ø–æ–∫—Ä–∏—Ç–∏–µ—Ç–æ", value=True)
    include_intermediate = st.checkbox("–û–ø—ä–Ω –≤ –º–µ–∂–¥–∏–Ω–µ–Ω –ø–ª–∞—Å—Ç", value=True)

if st.button("üìÑ –ì–µ–Ω–µ—Ä–∏—Ä–∞–π PDF –æ—Ç—á–µ—Ç", key="generate_pdf_button"):
    # –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ PDF
    def generate_pdf_report():
        class PDF(FPDF):
            def header(self):
                self.set_font('DejaVu', 'B', 15)
                self.cell(0, 10, '–û–¢–ß–ï–¢ –ó–ê –ü–™–¢–ù–ê –ö–û–ù–°–¢–†–£–ö–¶–ò–Ø', 0, 1, 'C')
                self.ln(5)
                
            def footer(self):
                self.set_y(-15)
                self.set_font('DejaVu', 'I', 8)
                self.cell(0, 10, f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ {self.page_no()}', 0, 0, 'C')
        
        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ PDF –æ–±–µ–∫—Ç —Å –ø–æ–¥–¥—Ä—ä–∂–∫–∞ –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–∞
        pdf = PDF()
        pdf.add_font('DejaVu', '', 'fonts/DejaVuSans.ttf', uni=True)
        pdf.add_font('DejaVu', 'B', 'fonts/DejaVuSans-Bold.ttf', uni=True)
        pdf.add_font('DejaVu', 'I', 'fonts/DejaVuSans-Oblique.ttf', uni=True)
        pdf.set_font('DejaVu', '', 12)
        pdf.add_page()
        
        # –ó–∞–≥–ª–∞–≤–∏–µ
        pdf.set_font('DejaVu', 'B', 16)
        pdf.cell(0, 10, '–û–¢–ß–ï–¢ –ó–ê –ü–™–¢–ù–ê –ö–û–ù–°–¢–†–£–ö–¶–ò–Ø', 0, 1, 'C')
        pdf.ln(10)
        
        # –î–∞—Ç–∞
        pdf.set_font('DejaVu', '', 12)
        today = datetime.now().strftime("%d.%m.%Y %H:%M:%S")
        pdf.cell(0, 10, f'–î–∞—Ç–∞: {today}', 0, 1)
        pdf.ln(5)
        
        # –°–ø–∏—Å—ä–∫ —Å –∏–∑–±—Ä–∞–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏
        pdf.set_font('DejaVu', 'B', 14)
        pdf.cell(0, 10, '–í–∫–ª—é—á–µ–Ω–∏ —Ä–∞–∑–¥–µ–ª–∏:', 0, 1)
        pdf.set_font('DejaVu', '', 12)
        
        included_sections = []
        if include_main: included_sections.append("–û—Å–Ω–æ–≤–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
        if include_fig94: included_sections.append("ÍöåŒº/p (—Ñ–∏–≥9.4)")
        if include_fig96: included_sections.append("ÍöåŒº/p (—Ñ–∏–≥9.6)")
        if include_fig97: included_sections.append("ÍöåŒº/p (—Ñ–∏–≥9.7)")
        if include_tension: included_sections.append("–û–ø—ä–Ω –≤ –ø–æ–∫—Ä–∏—Ç–∏–µ—Ç–æ")
        if include_intermediate: included_sections.append("–û–ø—ä–Ω –≤ –º–µ–∂–¥–∏–Ω–µ–Ω –ø–ª–∞—Å—Ç")
        
        for section in included_sections:
            pdf.cell(0, 10, f'‚Ä¢ {section}', 0, 1)
        pdf.ln(10)
        
        # –û—Å–Ω–æ–≤–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        if include_main:
            pdf.set_font('DejaVu', 'B', 14)
            pdf.cell(0, 10, '–û—Å–Ω–æ–≤–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –û—Ä–∞–∑–º–µ—Ä—è–≤–∞–Ω–µ', 0, 1)
            pdf.set_font('DejaVu', '', 12)
            
            # –û–±—â–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
            pdf.cell(0, 10, f'–ë—Ä–æ–π –ø–ª–∞—Å—Ç–æ–≤–µ: {st.session_state.num_layers}', 0, 1)
            pdf.cell(0, 10, f'D: {st.session_state.final_D} cm', 0, 1)
            pdf.cell(0, 10, f'–û—Å–æ–≤–∞ —Ç–µ–∂–µ—Å—Ç: {st.session_state.axle_load} kN', 0, 1)
            pdf.ln(5)
            
            # –î–∞–Ω–Ω–∏ –∑–∞ –ø–ª–∞—Å—Ç–æ–≤–µ—Ç–µ
            col_widths = [20, 30, 30, 30, 30, 30]
            headers = ["–ü–ª–∞—Å—Ç", "Ei (MPa)", "Ee (MPa)", "Ed (MPa)", "h (cm)", "Œª"]
            
            # –•–µ–¥—ä—Ä –Ω–∞ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞
            for i, header in enumerate(headers):
                pdf.cell(col_widths[i], 10, header, 1, 0, 'C')
            pdf.ln()
            
            # –î–∞–Ω–Ω–∏ –∑–∞ —Ä–µ–¥–æ–≤–µ—Ç–µ
            for i in range(st.session_state.num_layers):
                layer = st.session_state.layers_data[i]
                lambda_val = st.session_state.lambda_values[i]
                
                Ei_val = round(layer.get('Ei', 0)) if 'Ei' in layer else '-'
                Ee_val = round(layer.get('Ee', 0)) if 'Ee' in layer else '-'
                Ed_val = round(layer.get('Ed', 0)) if 'Ed' in layer else '-'
                h_val = layer.get('h', '-')
                
                pdf.cell(col_widths[0], 10, str(i+1), 1, 0, 'C')
                pdf.cell(col_widths[1], 10, str(Ei_val), 1, 0, 'C')
                pdf.cell(col_widths[2], 10, str(Ee_val), 1, 0, 'C')
                pdf.cell(col_widths[3], 10, str(Ed_val), 1, 0, 'C')
                pdf.cell(col_widths[4], 10, str(h_val), 1, 0, 'C')
                pdf.cell(col_widths[5], 10, str(lambda_val), 1, 0, 'C')
                pdf.ln()
            
            pdf.ln(10)
            
            # –¢–µ–∫—Å—Ç–æ–≤–∞ —Ä–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∏—Ç–µ
            for i, layer in enumerate(st.session_state.layers_data):
                if 'hD_point' in layer and 'Ed' in layer and 'Ei' in layer:
                    pdf.set_font('DejaVu', 'B', 12)
                    pdf.cell(0, 10, f'–î–∞–Ω–Ω–∏ –∑–∞ –ø–ª–∞—Å—Ç {i+1}:', 0, 1)
                    pdf.set_font('DejaVu', '', 10)
                    
                    hD_point = layer['hD_point']
                    EdEi_point = layer['Ed'] / layer['Ei']
                    
                    pdf.cell(0, 10, f'- h/D = {hD_point:.4f}', 0, 1)
                    pdf.cell(0, 10, f'- Ed/Ei = {EdEi_point:.4f}', 0, 1)
                    
                    if all(key in layer for key in ['y_low', 'y_high', 'low_iso', 'high_iso']):
                        pdf.cell(0, 10, f'- –ò–Ω—Ç–µ—Ä–ø–æ–ª–∞—Ü–∏—è –º–µ–∂–¥—É Ee/Ei = {layer["low_iso"]:.4f} –∏ Ee/Ei = {layer["high_iso"]:.4f}', 0, 1)
                        pdf.cell(0, 10, f'- –°—Ç–æ–π–Ω–æ—Å—Ç–∏ –Ω–∞ –∏–∑–æ–ª–∏–Ω–∏–∏—Ç–µ: y_low = {layer["y_low"]:.4f}, y_high = {layer["y_high"]:.4f}', 0, 1)
                    
                    pdf.ln(5)
            
            # –¢–æ–ø–ª–∏–Ω–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
            if 'lambda_op_input' in st.session_state and 'lambda_zp_input' in st.session_state:
                lambda_op = st.session_state.lambda_op_input
                lambda_zp = st.session_state.lambda_zp_input
                m_value = lambda_zp / lambda_op
                z1 = st.session_state.get('z1_input', 100)
                z_value = z1 * m_value
                
                pdf.set_font('DejaVu', 'B', 14)
                pdf.cell(0, 10, '–¢–æ–ø–ª–∏–Ω–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏', 0, 1)
                pdf.set_font('DejaVu', '', 12)
                pdf.cell(0, 10, f'Œª–æ–ø = {lambda_op} kcal/mhg', 0, 1)
                pdf.cell(0, 10, f'Œª–∑–ø = {lambda_zp} kcal/mhg', 0, 1)
                pdf.cell(0, 10, f'm = Œª–∑–ø / Œª–æ–ø = {lambda_zp} / {lambda_op} = {m_value:.2f}', 0, 1)
                pdf.cell(0, 10, f'z‚ÇÅ = {z1} cm (–¥—ä–ª–±–æ—á–∏–Ω–∞ –Ω–∞ –∑–∞–º—Ä—ä–∑–≤–∞–Ω–µ –≤ –æ—Ç–∫—Ä–∏—Ç–æ –ø–æ–ª–µ)', 0, 1)
                pdf.cell(0, 10, f'z = z‚ÇÅ * m = {z1} * {m_value:.2f} = {z_value:.2f} cm', 0, 1)
                pdf.ln(10)
                
                # R‚ÇÄ –∏–∑—á–∏—Å–ª–µ–Ω–∏–µ
                if all('h' in layer for layer in st.session_state.layers_data):
                    sum_h = sum(layer['h'] for layer in st.session_state.layers_data)
                    sum_lambda = sum(st.session_state.lambda_values)
                    R0 = sum_h / sum_lambda if sum_lambda != 0 else 0
                    
                    pdf.cell(0, 10, f'R‚ÇÄ = Œ£h / Œ£Œª = {sum_h:.2f} / {sum_lambda:.2f} = {R0:.2f} cm', 0, 1)
                    pdf.ln(10)
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞
                pdf.set_font('DejaVu', 'B', 14)
                pdf.cell(0, 10, '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è—Ç–∞', 0, 1)
                pdf.set_font('DejaVu', '', 12)
                
                if all('h' in layer for layer in st.session_state.layers_data):
                    if z_value > sum_h:
                        pdf.cell(0, 10, '‚úÖ –£—Å–ª–æ–≤–∏–µ—Ç–æ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω–æ: z > Œ£h', 0, 1)
                        pdf.cell(0, 10, f'z = {z_value:.2f} cm > Œ£h = {sum_h:.2f} cm', 0, 1)
                    else:
                        pdf.cell(0, 10, '‚ùå –£—Å–ª–æ–≤–∏–µ—Ç–æ –ù–ï –µ –∏–∑–ø—ä–ª–Ω–µ–Ω–æ: z ‚â§ Œ£h', 0, 1)
                        pdf.cell(0, 10, f'z = {z_value:.2f} cm ‚â§ Œ£h = {sum_h:.2f} cm', 0, 1)
        
        # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –¥—Ä—É–≥–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ —Å–ø–æ—Ä–µ–¥ –∏–∑–±–æ—Ä–∞
        # –¢—É–∫ –º–æ–∂–µ—Ç–µ –¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∏, –∞–∫–æ –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        
        return pdf.output(dest='S').encode('latin1')
    
    # –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –∏ —Å–≤–∞–ª—è–Ω–µ –Ω–∞ PDF
    try:
        with st.spinner('–ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ PDF –æ—Ç—á–µ—Ç...'):
            pdf_bytes = generate_pdf_report()
            
            # –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –±—É—Ç–æ–Ω –∑–∞ —Å–≤–∞–ª—è–Ω–µ
            st.success("PDF –æ—Ç—á–µ—Ç—ä—Ç –µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            st.download_button(
                label="üì• –°–≤–∞–ª–∏ PDF –æ—Ç—á–µ—Ç",
                data=pdf_bytes,
                file_name="patna_konstrukcia_report.pdf",
                mime="application/pdf"
            )
        
    except Exception as e:
        st.error(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ PDF: {str(e)}")

# –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —à—Ä–∏—Ñ—Ç–æ–≤–µ—Ç–µ
st.markdown("""
<div class="warning-box">
    <strong>–í–∞–∂–Ω–æ:</strong> –ó–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ PDF —Ñ–∞–π–ª–æ–≤–µ –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–∞, 
    –º–æ–ª—è –¥–æ–±–∞–≤–µ—Ç–µ —Å–ª–µ–¥–Ω–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–µ –≤ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è 'fonts' –≤ —Å—ä—â–∞—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–∞—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ:
    <ul>
        <li>DejaVuSans.ttf</li>
        <li>DejaVuSans-Bold.ttf</li>
        <li>DejaVuSans-Oblique.ttf</li>
    </ul>
</div>
""", unsafe_allow_html=True)
